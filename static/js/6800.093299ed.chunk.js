"use strict";(self.webpackChunksuperbee_front=self.webpackChunksuperbee_front||[]).push([[6800],{86800:(t,a,r)=>{r.r(a),r.d(a,{Split:()=>o});var e=r(54705),s=r(96337),c=r(42151),i=r(17673),n=r(98253);r(2914),r(45355),r(26279),r(70689),r(96487),r(68070);class o{get chainId(){return this._chainId}constructor(t,a,r){(0,e.A)(this,"withdraw",(0,n.dx)((async t=>n.aW.fromContractWrapper({contractWrapper:this.contractWrapper,method:"release(address)",args:[await(0,n.cL)(t)]})))),(0,e.A)(this,"withdrawToken",(0,n.dx)((async(t,a)=>n.aW.fromContractWrapper({contractWrapper:this.contractWrapper,method:"release(address,address)",args:[await(0,n.cL)(a),await(0,n.cL)(t)]})))),(0,e.A)(this,"distribute",(0,n.dx)((async()=>n.aW.fromContractWrapper({contractWrapper:this.contractWrapper,method:"distribute()",args:[]})))),(0,e.A)(this,"distributeToken",(0,n.dx)((async t=>n.aW.fromContractWrapper({contractWrapper:this.contractWrapper,method:"distribute(address)",args:[await(0,n.cL)(t)]}))));let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},c=arguments.length>4?arguments[4]:void 0,i=arguments.length>5?arguments[5]:void 0,p=arguments.length>6&&void 0!==arguments[6]?arguments[6]:new n.dw(t,a,c,s,r);this._chainId=i,this.abi=n.e.parse(c||[]),this.contractWrapper=p,this.storage=r,this.metadata=new n.ah(this.contractWrapper,n.d$,this.storage),this.app=new n.b0(this.contractWrapper,this.metadata,this.storage),this.roles=new n.ai(this.contractWrapper,o.contractRoles),this.encoder=new n.ag(this.contractWrapper),this.estimator=new n.aQ(this.contractWrapper),this.events=new n.aR(this.contractWrapper),this.interceptor=new n.aS(this.contractWrapper)}onNetworkUpdated(t){this.contractWrapper.updateSignerOrProvider(t)}getAddress(){return this.contractWrapper.address}async getAllRecipients(){const t=[];let a=c.gH.from(0);const r=await this.contractWrapper.read("payeeCount",[]);for(;a.lt(r);)try{const r=await this.contractWrapper.read("payee",[a]);t.push(await this.getRecipientSplitPercentage(r)),a=a.add(1)}catch(e){if("method"in e&&e.method.toLowerCase().includes("payee(uint256)"))break;throw e}return t}async balanceOfAllRecipients(){const t=await this.getAllRecipients(),a={};for(const r of t)a[r.address]=await this.balanceOf(r.address);return a}async balanceOfTokenAllRecipients(t){const a=await(0,n.cL)(t),r=await this.getAllRecipients(),e={};for(const s of r)e[s.address]=await this.balanceOfToken(s.address,a);return e}async balanceOf(t){const a=await(0,n.cL)(t),r=await this.contractWrapper.getProvider().getBalance(this.getAddress()),e=await this.contractWrapper.read("totalReleased",[]),s=r.add(e);return this._pendingPayment(a,s,await this.contractWrapper.read("released",[a]))}async balanceOfToken(t,a){const r=await(0,n.cL)(a),e=await(0,n.cL)(t),c=new i.NZ(r,s,this.contractWrapper.getProvider()),o=await c.balanceOf(this.getAddress()),p=await this.contractWrapper.read("totalReleased",[r]),d=o.add(p),h=await this._pendingPayment(e,d,await this.contractWrapper.read("released",[r,e]));return await(0,n.bc)(this.contractWrapper.getProvider(),r,h)}async getRecipientSplitPercentage(t){const a=await(0,n.cL)(t),[r,e]=await Promise.all([this.contractWrapper.read("totalShares",[]),this.contractWrapper.read("shares",[t])]);return{address:a,splitPercentage:e.mul(c.gH.from(1e7)).div(r).toNumber()/1e5}}async _pendingPayment(t,a,r){return a.mul(await this.contractWrapper.read("shares",[await(0,n.cL)(t)])).div(await this.contractWrapper.read("totalShares",[])).sub(r)}async prepare(t,a,r){return n.aW.fromContractWrapper({contractWrapper:this.contractWrapper,method:t,args:a,overrides:r})}async call(t,a,r){return this.contractWrapper.call(t,a,r)}}(0,e.A)(o,"contractRoles",n.d_)}}]);