"use strict";(self.webpackChunksuperbee_front=self.webpackChunksuperbee_front||[]).push([[6916],{78103:(t,r,e)=>{e.d(r,{S:()=>s});var a=e(54705),n=e(39088);class s{get chainId(){return this._chainId}constructor(t,r,e){(0,a.A)(this,"transfer",(0,n.dx)((async(t,r)=>this.erc721.transfer.prepare(t,r)))),(0,a.A)(this,"setApprovalForAll",(0,n.dx)((async(t,r)=>this.erc721.setApprovalForAll.prepare(t,r)))),(0,a.A)(this,"setApprovalForToken",(0,n.dx)((async(t,r)=>n.aW.fromContractWrapper({contractWrapper:this.contractWrapper,method:"approve",args:[await(0,n.cL)(t),r]})))),this.contractWrapper=t,this.storage=r,this.erc721=new n.aD(this.contractWrapper,this.storage,e),this._chainId=e}onNetworkUpdated(t){this.contractWrapper.updateSignerOrProvider(t)}getAddress(){return this.contractWrapper.address}async getAll(t){return this.erc721.getAll(t)}async getOwned(t){return t&&(t=await(0,n.cL)(t)),this.erc721.getOwned(t)}async getOwnedTokenIds(t){return t&&(t=await(0,n.cL)(t)),this.erc721.getOwnedTokenIds(t)}async totalSupply(){return this.erc721.totalCirculatingSupply()}async get(t){return this.erc721.get(t)}async ownerOf(t){return this.erc721.ownerOf(t)}async balanceOf(t){return this.erc721.balanceOf(t)}async balance(){return this.erc721.balance()}async isApproved(t,r){return this.erc721.isApproved(t,r)}}},15709:(t,r,e)=>{e.d(r,{h:()=>s});var a=e(96337),n=e(39088);async function s(t,r,e){const s=t.getProvider(),o=new n.dw(s,r,a,{},t.storage),c=await t.getSignerAddress(),i=t.address;return(await o.read("allowance",[c,i])).gte(e)}},56916:(t,r,e)=>{e.r(r),e.d(r,{Multiwrap:()=>i});var a=e(54705),n=e(22741),s=e(39088),o=e(15709),c=e(78103);e(2914),e(45355),e(26279),e(24259),e(96487),e(61718);class i extends c.S{constructor(t,r,e){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},o=arguments.length>4?arguments[4]:void 0,c=arguments.length>5?arguments[5]:void 0;super(arguments.length>6&&void 0!==arguments[6]?arguments[6]:new s.dw(t,r,o,n,e),e,c),(0,a.A)(this,"wrap",(0,s.dx)((async(t,r,e)=>{const a=await(0,s.dU)(r,this.storage),n=await(0,s.cL)(e||await this.contractWrapper.getSignerAddress()),o=await this.toTokenStructList(t);return s.aW.fromContractWrapper({contractWrapper:this.contractWrapper,method:"wrap",args:[o,a,n],parse:t=>{const r=this.contractWrapper.parseLogs("TokensWrapped",null===t||void 0===t?void 0:t.logs);if(0===r.length)throw new Error("TokensWrapped event not found");const e=r[0].args.tokenIdOfWrappedToken;return{id:e,receipt:t,data:()=>this.get(e)}}})}))),(0,a.A)(this,"unwrap",(0,s.dx)((async(t,r)=>{const e=await(0,s.cL)(r||await this.contractWrapper.getSignerAddress());return s.aW.fromContractWrapper({contractWrapper:this.contractWrapper,method:"unwrap",args:[t,e]})}))),this.abi=s.e.parse(o||[]),this.metadata=new s.ah(this.contractWrapper,s.dT,this.storage),this.app=new s.b0(this.contractWrapper,this.metadata,this.storage),this.roles=new s.ai(this.contractWrapper,i.contractRoles),this.encoder=new s.ag(this.contractWrapper),this.estimator=new s.aQ(this.contractWrapper),this.events=new s.aR(this.contractWrapper),this.royalties=new s.aj(this.contractWrapper,this.metadata),this.owner=new s.aV(this.contractWrapper)}async getWrappedContents(t){const r=await this.contractWrapper.read("getWrappedContents",[t]),e=[],a=[],o=[];for(const c of r)switch(c.tokenType){case 0:{const t=await(0,s.bb)(this.contractWrapper.getProvider(),c.assetContract);e.push({contractAddress:c.assetContract,quantity:n.formatUnits(c.totalAmount,t.decimals)});break}case 1:a.push({contractAddress:c.assetContract,tokenId:c.tokenId});break;case 2:o.push({contractAddress:c.assetContract,tokenId:c.tokenId,quantity:c.totalAmount.toString()})}return{erc20Tokens:e,erc721Tokens:a,erc1155Tokens:o}}async toTokenStructList(t){const r=[],e=this.contractWrapper.getProvider(),a=await this.contractWrapper.getSignerAddress();if(t.erc20Tokens)for(const n of t.erc20Tokens){const t=await(0,s.ba)(e,n.quantity,n.contractAddress);if(!await(0,o.h)(this.contractWrapper,n.contractAddress,t))throw new Error('ERC20 token with contract address "'.concat(n.contractAddress,'" does not have enough allowance to transfer.\n\nYou can set allowance to the multiwrap contract to transfer these tokens by running:\n\nawait sdk.getToken("').concat(n.contractAddress,'").setAllowance("').concat(this.getAddress(),'", ').concat(n.quantity,");\n\n"));r.push({assetContract:n.contractAddress,totalAmount:t,tokenId:0,tokenType:0})}if(t.erc721Tokens)for(const n of t.erc721Tokens){if(!await(0,s.dG)(this.contractWrapper.getProvider(),this.getAddress(),n.contractAddress,n.tokenId,a))throw new Error('ERC721 token "'.concat(n.tokenId,'" with contract address "').concat(n.contractAddress,'" is not approved for transfer.\n\nYou can give approval the multiwrap contract to transfer this token by running:\n\nawait sdk.getNFTCollection("').concat(n.contractAddress,'").setApprovalForToken("').concat(this.getAddress(),'", ').concat(n.tokenId,");\n\n"));r.push({assetContract:n.contractAddress,totalAmount:0,tokenId:n.tokenId,tokenType:1})}if(t.erc1155Tokens)for(const n of t.erc1155Tokens){if(!await(0,s.dG)(this.contractWrapper.getProvider(),this.getAddress(),n.contractAddress,n.tokenId,a))throw new Error('ERC1155 token "'.concat(n.tokenId,'" with contract address "').concat(n.contractAddress,'" is not approved for transfer.\n\nYou can give approval the multiwrap contract to transfer this token by running:\n\nawait sdk.getEdition("').concat(n.contractAddress,'").setApprovalForAll("').concat(this.getAddress(),'", true);\n\n'));r.push({assetContract:n.contractAddress,totalAmount:n.quantity,tokenId:n.tokenId,tokenType:2})}return r}async prepare(t,r,e){return s.aW.fromContractWrapper({contractWrapper:this.contractWrapper,method:t,args:r,overrides:e})}async call(t,r,e){return this.contractWrapper.call(t,r,e)}}(0,a.A)(i,"contractRoles",s.dS)}}]);